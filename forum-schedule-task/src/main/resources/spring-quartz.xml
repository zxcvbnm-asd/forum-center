<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:annotation-config/>
    <bean id="scheduleJob" class="cn.hegongda.task.schedule.ScheduleJob"></bean>
    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 注入目标对象 -->
        <property name="targetObject" ref="scheduleJob"/>
        <!-- 注入目标方法 -->
        <property name="targetMethod" value="differPicture"/>
    </bean> <!-- 注册一个触发器，指定任务触发的时间 -->

    <bean id="jobDetail1" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 注入目标对象 -->
        <property name="targetObject" ref="scheduleJob"/>
        <!-- 注入目标方法 -->
        <property name="targetMethod" value="readRecoderToDatabase"/>
    </bean> <!-- 注册一个触发器，指定任务触发的时间 -->

    <bean id="jobDetail2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <!-- 注入目标对象 -->
        <property name="targetObject" ref="scheduleJob"/>
        <!-- 注入目标方法 -->
        <property name="targetMethod" value="clearRedisMaxNumArticle"/>
    </bean> <!-- 注册一个触发器，指定任务触发的时间 -->
    <bean id="myTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <!--注入JobDetail -->
        <property name="jobDetail" ref="jobDetail"/>
        <!-- 指定触发的时间，基于Cron表达式 每隔两小时清理一次 秒 分 时 日 月 年 -->
        <property name="cronExpression">
            <value>30 * * * * ?</value>
        </property>
    </bean>

    <bean id="myTrigger1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <!--注入JobDetail -->
        <property name="jobDetail" ref="jobDetail1"/>
        <!-- 指定触发的时间，基于Cron表达式 每隔两小时清理一次 秒 分 时 日 月 年 -->
        <property name="cronExpression">
            <value>10,20 * * * * ?</value>
        </property>
    </bean>

    <bean id="myTrigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <!--注入JobDetail -->
        <property name="jobDetail" ref="jobDetail2"/>
        <!-- 指定触发的时间，基于Cron表达式 每隔两小时清理一次 秒 分 时 日 月 年 -->
        <property name="cronExpression">
            <value>10,20 * * * * ?</value>
        </property>
    </bean>
    <!-- 注册一个统一的调度工厂，通过这个调度工厂调度任务 -->
    <bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <!-- 注入多个触发器 -->
        <property name="triggers">
            <list>
                <ref bean="myTrigger"/>
                <ref bean="myTrigger1"/>
                <ref bean="myTrigger2"/>
            </list>
        </property>
    </bean>
    <!--这个类是用来设置触发时间的， startJobs方法启动调度容器，然后按照上面触发器每隔1s执行所配置的myJob2.doSomething()方法 -->
    <bean id="quartzManager" class="cn.hegongda.task.config.QuartzManager" lazy-init="false" init-method="startJobs" >
        <!--这个对象一定要注入，这样类才能进行管理，还有在类型要用get set方法，不然会报错。-->
        <property name="scheduler" ref="scheduler"/>
    </bean>
</beans>